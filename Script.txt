GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Dmitry', bday: 1932, dday: 1982, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Victoria', bday: 1934, dday: 2006, sex: 'Female'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Fedor', bday: 1958, dday: null, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Anna', bday: 1967, dday: null, sex: 'Female'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Christina', bday: 1957, dday: 2018, sex: 'Female'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Daniil', bday: 1984, dday: null, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Elena', bday: 1986, dday: 2010, sex: 'Female'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Anatoly', bday: 2010, dday: null, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Natalia', bday: 1982, dday: null, sex: 'Female'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Georgy', bday: 2012, dday: null, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Anton', bday: 1965, dday: null, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Boris', bday: 1997, dday: null, sex: 'Male'})"
GRAPH.QUERY FamilyTree "CREATE(:Person {name: 'Julia', bday: 2000, dday: null, sex: 'Female'})"
GRAPH.QUERY FamilyTree "MATCH(husb:Person {name: 'Dmitry'}), (wif:Person {name: 'Victoria'}) CREATE(husb)-[:MaritalStatus {mday: 1956, endmday: 1982}]->(wif)"
GRAPH.QUERY FamilyTree "MATCH(husb:Person {name: 'Fedor'}), (wif:Person {name: 'Christina'}) CREATE(husb)-[:MaritalStatus {mday: 1981, endmday: 2018}]->(wif)"
GRAPH.QUERY FamilyTree "MATCH(husb:Person {name: 'Daniil'}), (wif:Person {name: 'Elena'}) CREATE(husb)-[:MaritalStatus {mday: 2008, endmday: 2010}]->(wif)"
GRAPH.QUERY FamilyTree "MATCH(husb:Person {name: 'Daniil'}), (wif:Person {name: 'Natalia'}) CREATE(husb)-[:MaritalStatus {mday: 2011, endmday: null}]->(wif)"
GRAPH.QUERY FamilyTree "MATCH(wif:Person {name: 'Anna'}), (husb:Person {name: 'Anton'}) CREATE(wif)-[:MaritalStatus {mday: 1992, endmday: null}]->(husb)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Fedor'}), (par:Person {name: 'Dmitry'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Fedor'}), (par:Person {name: 'Victoria'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Daniil'}), (par:Person {name: 'Fedor'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Daniil'}), (par:Person {name: 'Christina'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Anatoly'}), (par:Person {name: 'Daniil'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Anatoly'}), (par:Person {name: 'Elena'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Georgy'}), (par:Person {name: 'Daniil'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Georgy'}), (par:Person {name: 'Natalia'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Anna'}), (par:Person {name: 'Dmitry'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Anna'}), (par:Person {name: 'Victoria'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Boris'}), (par:Person {name: 'Anna'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Boris'}), (par:Person {name: 'Anton'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Julia'}), (par:Person {name: 'Anna'}) CREATE (ch)-[:Child]->(par)"
GRAPH.QUERY FamilyTree "MATCH(ch:Person {name: 'Julia'}), (par:Person {name: 'Anton'}) CREATE (ch)-[:Child]->(par)"

GRAPH.QUERY FamilyTree "MATCH(family:Person) RETURN family.name AS Name, family.bday AS Birthday ORDER BY family.bday"
GRAPH.QUERY FamilyTree "MATCH(family:Person) WHERE family.bday < 1969 RETURN family.name AS Name, family.bday AS Birthday ORDER BY family.bday"
GRAPH.QUERY FamilyTree "MATCH(alive:Person) WHERE alive.dday IS null RETURN alive.name AS Name"
GRAPH.QUERY FamilyTree "MATCH(death:Person) WHERE death.dday IS NOT null RETURN death.name AS Name, death.dday-death.bday AS Age"
GRAPH.QUERY FamilyTree "MATCH(average:Person) WHERE average.dday IS NOT null RETURN ROUND(AVG(average.dday-average.bday)) AS `Average age`"
GRAPH.QUERY FamilyTree "MATCH(deathday:Person) WHERE deathday.name='Christina' RETURN deathday.dday AS Deathday"
GRAPH.QUERY FamilyTree "MATCH(male:Person)-[marrage:MaritalStatus]->(female:Person) RETURN male.name AS Husband, female.name AS Wife, marrage.mday-male.bday AS `Husband marriage age`, marrage.mday-female.bday AS `Wife marriage age`"
GRAPH.QUERY FamilyTree "MATCH(male:Person)-[marrage:MaritalStatus]->(female:Person) RETURN ROUND((AVG(marrage.mday-male.bday + marrage.mday-female.bday))/2) AS `Average marriage age`"
GRAPH.QUERY FamilyTree "MATCH(child:Person)-[:Child]->(mother:Person) WHERE child.name='Georgy' AND mother.sex='Female' RETURN mother.name AS Name"
GRAPH.QUERY FamilyTree "MATCH(child:Person)-[:Child]->(father:Person) WHERE father.name='Anton' RETURN COUNT(child) AS `Number of children`"
GRAPH.QUERY FamilyTree "MATCH(child:Person)-[:Child*1..]->(ancestor:Person) WHERE child.name='Anatoly' RETURN ancestor.name AS Name"
GRAPH.QUERY FamilyTree "MATCH(child:Person)-[:Child*1..]->(descendant:Person) WHERE descendant.name='Victoria' RETURN child.name AS Name"
GRAPH.QUERY FamilyTree "MATCH (fchild:Person)-[:Child]->(fcousin:Person)-[:Child]->(family:Person)<-[:Child]-(scousin:Person)<-[:Child]-(schild:Person) WHERE (fchild.name = 'Daniil' AND fcousin<>scousin) RETURN schild.name AS Name"
